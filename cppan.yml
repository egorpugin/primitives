local_settings:
    #build_dir_type: local
    #use_shared_libs: false
    rc_enabled: false
    builds:
        vs_release64:
            generator: Visual Studio 15 2017 Win64
        vs_release:
            generator: Visual Studio 15 2017
        vs_preview:
            c_compiler: c:/Program Files (x86)/Microsoft Visual Studio/Preview/Community/VC/Tools/MSVC/14.11.25325/bin/HostX64/x86/cl.exe
            cxx_compiler: c:/Program Files (x86)/Microsoft Visual Studio/Preview/Community/VC/Tools/MSVC/14.11.25325/bin/HostX64/x86/cl.exe
            cxx_flags: /std:c++17
        gcc7:
            c_compiler: gcc-7
            cxx_compiler: g++-7
        macos:
            c_compiler: clang
            cxx_compiler: clang++
        vs_llvm:
            toolset: LLVM-vs2014
        win_clang_ninja:
            generator: Ninja
            c_compiler: clang-cl
            cxx_compiler: clang-cl
            use_cache: false
root_project: pvt.egorpugin.primitives
common_settings:
    c++: 17
    create_default_api: true
    default_api_start: primitives
    options:
        any:
            compile_options:
                msvc:
                    public:
                        - /wd4251 # needs to have dll-interface to be used by clients of
                        #- /wd4275 # non dll-interface used as base for dll-interface
                        - /permissive-
projects:
    templates:
        name: templates
        type: library
        root_directory: src/templates
        options:
            any:
                compile_options:
                    clang:
                        private:
                            -   -Wno-assume
                            -   -Wno-delete-non-virtual-dtor
                            -   -Wno-potentially-evaluated-expression

    version:
        name: version
        type: library
        root_directory: src/version

        options:
            any:
                compile_options:
                    clang:
                        private:
                            -   -Wno-assume
                            -   -Wno-delete-non-virtual-dtor
                            -   -Wno-potentially-evaluated-expression

        dependencies:
            public:
                templates:
                    version: "*"
                pvt.cppan.demo.ragel:
                    version: 6
                pvt.cppan.demo.lexxmark.winflexbison.flex:
                    version: master
                    ref: flex
                pvt.cppan.demo.lexxmark.winflexbison.bison:
                    version: master
                    ref: bison
                pvt.cppan.demo.imageworks.pystring:
                    version: 1
        post_sources: |
            macro(ragel f)
                set(i ${SDIR}/src/${f}.rl)
                set(o ${f}.rl.cpp)
                add_custom_command(OUTPUT ${BDIR}/${o}
                    COMMAND pvt.cppan.demo.ragel ${i} -o ${BDIR}/${o}
                    DEPENDS ${i}
                )
                set(src ${src} ${BDIR}/${o})
            endmacro(ragel)

            ragel(version)

            #

        post_target: |
            macro(flex_bison lexer parser)
                set(bdir ${BDIR_PRIVATE}/fb)

                get_filename_component(d ${lexer} DIRECTORY)
                execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${bdir}/${d})

                add_custom_command(OUTPUT
                        ${bdir}/${parser}.cpp
                        ${bdir}/${parser}.hpp
                    COMMAND ${bison} -o ${bdir}/${parser}.cpp --defines=${bdir}/${parser}.hpp ${SDIR}/${parser}
                    DEPENDS ${bison} ${SDIR}/${parser}
                    WORKING_DIRECTORY ${d}
                )
                target_include_directories(${this} PRIVATE ${bdir}/${d})

                get_filename_component(d ${parser} DIRECTORY)
                execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${bdir}/${d})

                add_custom_command(OUTPUT
                        ${bdir}/${lexer}.cpp
                        ${bdir}/${lexer}.h
                    COMMAND ${flex} -o ${bdir}/${lexer}.cpp --header-file=${lexer}.h ${SDIR}/${lexer}
                    DEPENDS ${flex} ${SDIR}/${lexer} ${bdir}/${parser}.hpp
                    WORKING_DIRECTORY ${bdir}
                )
                target_include_directories(${this} PRIVATE ${bdir}/${d})

                target_sources(${this} PRIVATE
                    ${bdir}/${parser}.cpp
                    ${bdir}/${parser}.hpp
                    ${bdir}/${lexer}.cpp
                    ${bdir}/${lexer}.h
                )
            endmacro()

            flex_bison(src/range.ll src/range.yy)



    test.version:
        skip_on_server: true
        files:
            -   src/version.cpp
        options:
            any:
                compile_options:
                    clang:
                        private:
                            -   -Wno-assume
                            -   -Wno-delete-non-virtual-dtor
                            -   -Wno-potentially-evaluated-expression
                    msvc:
                        public:
                            - /bigobj
        dependencies:
            public:
                pvt.cppan.demo.catchorg.catch2:
                    version: 2
                version:
                    version: "*"